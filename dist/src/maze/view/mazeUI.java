/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package maze.view;

import java.awt.event.ActionListener;
import javax.swing.JLabel;
import javax.swing.Timer;
import maze.model.Keeper;
import maze.model.Map;
import maze.model.NPC;
import maze.model.Player;

/**
 *
 * @author Yahia
 */
public class mazeUI extends javax.swing.JFrame /*implements ActionListener*/{

    
    Timer t;      
     
    private Map map = Map.Map();   
    private Player player  = Player.Player();
     private NPC keeper = new Keeper(); 
    
    private boolean bulletMove;//Determines if the bullet is moving or not
    
    public void setMap(Map map){
        this.map = map;
    }
    
    public void setPlayer(Player player){
        this.player = player;
    }

    public void setKeeper(NPC keeper) {
        this.keeper = keeper;
    }

    
    public void setBulletMove(boolean bulletMove) {
        this.bulletMove = bulletMove;
    }

    public JLabel getStatusDisplay() {
        return statusDisplay;
    }

    public JLabel getScoreDisplay() {
        return scoreDisplay;
    }

    public JLabel getTimeDisplay() {
        return timeDisplay;
    }

    public JLabel getTalk1() {
        return talk1;
    }

    public JLabel getTalk2() {
        return talk2;
    }
    
    
     public void addLoadMenuListener(ActionListener e){        
        loadMenu.addActionListener(e);
    }
    
      public void addRestartMenuListener(ActionListener e){        
        restartMenu.addActionListener(e);
    }
      
    /**
     * Creates new form mazeUI
     */
    public mazeUI() {
        
        initComponents();
        
        healthDisplay.setText(String.valueOf(player.getHealth()));
        armorDisplay.setText(String.valueOf(player.getArmor()));
        
        bulletMove = false;//Default value for checking whther the bullet is moving or not
        
        this.customMapPanel.setLayout(null);
               
    }
    
 
    
    public void refresh(){
        this.customMapPanel.setBulletIsMoving(bulletMove);
        
        healthDisplay.setText(String.valueOf(player.getHealth()));
        armorDisplay.setText(String.valueOf(player.getArmor()));
        ammoDisplay.setText(String.valueOf(player.getAmmo()));
        scoreDisplay.setText(String.valueOf(player.getScore()));
        
        this.customMapPanel.setMap(map);
        this.customMapPanel.setPlayer(player);     
        this.customMapPanel.setK(keeper);
        this.customMapPanel.repaint();
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        customMapPanel = new maze.view.CustomJpanel();
        talk1 = new javax.swing.JLabel();
        talk2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        statusDisplay = new javax.swing.JLabel();
        healthDisplay = new javax.swing.JLabel();
        armorDisplay = new javax.swing.JLabel();
        ammoDisplay = new javax.swing.JLabel();
        scoreDisplay = new javax.swing.JLabel();
        timeDisplay = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        loadMenu = new javax.swing.JMenuItem();
        restartMenu = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        customMapPanel.setBackground(new java.awt.Color(255, 255, 255));

        talk1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        talk1.setForeground(new java.awt.Color(204, 255, 204));
        talk1.setText("Where am I ? Some kind of forest?");

        talk2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        talk2.setForeground(new java.awt.Color(204, 255, 204));
        talk2.setText("I need to find a way out...");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/health.gif"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/armor_icon.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 153, 153));
        jLabel3.setText("Score:");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magic_icon.png"))); // NOI18N

        statusDisplay.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N

        healthDisplay.setFont(new java.awt.Font("Century Gothic", 1, 13)); // NOI18N
        healthDisplay.setForeground(new java.awt.Color(255, 153, 153));
        healthDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        healthDisplay.setText("Health");

        armorDisplay.setFont(new java.awt.Font("Century Gothic", 1, 13)); // NOI18N
        armorDisplay.setForeground(new java.awt.Color(255, 153, 153));
        armorDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        armorDisplay.setText("Armor");

        ammoDisplay.setFont(new java.awt.Font("Century Gothic", 1, 13)); // NOI18N
        ammoDisplay.setForeground(new java.awt.Color(255, 153, 153));
        ammoDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ammoDisplay.setText("Magic");

        scoreDisplay.setFont(new java.awt.Font("Century Gothic", 1, 13)); // NOI18N
        scoreDisplay.setForeground(new java.awt.Color(255, 153, 153));
        scoreDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scoreDisplay.setText("Score");

        timeDisplay.setFont(new java.awt.Font("Century Gothic", 1, 13)); // NOI18N
        timeDisplay.setForeground(new java.awt.Color(255, 153, 153));
        timeDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeDisplay.setText("Time");

        javax.swing.GroupLayout customMapPanelLayout = new javax.swing.GroupLayout(customMapPanel);
        customMapPanel.setLayout(customMapPanelLayout);
        customMapPanelLayout.setHorizontalGroup(
            customMapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customMapPanelLayout.createSequentialGroup()
                .addGroup(customMapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(customMapPanelLayout.createSequentialGroup()
                        .addGroup(customMapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(customMapPanelLayout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addComponent(talk1))
                            .addGroup(customMapPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(healthDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(armorDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(scoreDisplay)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)))
                        .addGroup(customMapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(customMapPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ammoDisplay)
                                .addGap(34, 34, 34)
                                .addComponent(timeDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(customMapPanelLayout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(talk2, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(customMapPanelLayout.createSequentialGroup()
                        .addGap(507, 507, 507)
                        .addComponent(statusDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(360, Short.MAX_VALUE))
        );
        customMapPanelLayout.setVerticalGroup(
            customMapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customMapPanelLayout.createSequentialGroup()
                .addGroup(customMapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(customMapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ammoDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(timeDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(customMapPanelLayout.createSequentialGroup()
                        .addGroup(customMapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(customMapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(armorDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(scoreDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel4))
                        .addGap(218, 218, 218)
                        .addGroup(customMapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(talk1)
                            .addComponent(talk2)))
                    .addGroup(customMapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(healthDisplay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(statusDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(250, Short.MAX_VALUE))
        );

        jMenuBar1.setBackground(new java.awt.Color(204, 204, 204));
        jMenuBar1.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N

        jMenu1.setText("File");

        loadMenu.setText("Load Save");
        jMenu1.add(loadMenu);

        restartMenu.setText("Restart");
        jMenu1.add(restartMenu);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(customMapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(customMapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mazeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mazeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mazeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mazeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mazeUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ammoDisplay;
    private javax.swing.JLabel armorDisplay;
    private maze.view.CustomJpanel customMapPanel;
    private javax.swing.JLabel healthDisplay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem loadMenu;
    private javax.swing.JMenuItem restartMenu;
    private javax.swing.JLabel scoreDisplay;
    private javax.swing.JLabel statusDisplay;
    public javax.swing.JLabel talk1;
    public javax.swing.JLabel talk2;
    private javax.swing.JLabel timeDisplay;
    // End of variables declaration//GEN-END:variables
}
